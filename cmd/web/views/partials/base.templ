package partials

import (
	"strings"
	
	"github.com/hail2skins/armory/cmd/web/views/data"
)

// Helper function to check if a path is an admin path
func isAdminPath(path string) bool {
	return strings.HasPrefix(path, "/admin")
}

templ Base(data data.AuthData, children templ.Component) {
	<!DOCTYPE html>
	<html lang="en" class="h-screen">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width,initial-scale=1"/>
			if data.Title != "" {
				<title>{ data.Title } | { data.SiteName }</title>
			} else {
				<title>{ data.SiteName }</title>
			}
			<link rel="icon" href="/favicon.ico" type="image/x-icon"/>
			<!-- Tailwind CDN -->
			<script src="https://cdn.tailwindcss.com"></script>
			<!-- Local compiled CSS -->
			<link rel="stylesheet" href="/assets/css/output.css">
			<script>
				tailwind.config = {
					theme: {
						extend: {
							colors: {
								gunmetal: {
									50: '#f7f7f8',
									100: '#eeeef0',
									200: '#d5d6da',
									300: '#b3b5bc',
									400: '#898c99',
									500: '#6b6e7c',
									600: '#5e616e',
									700: '#4d4f59',
									800: '#43444c',
									900: '#3a3b41',
									950: '#232428',
								},
								brass: {
									50: '#fbf8ed',
									100: '#f3eccc',
									200: '#e8d494',
									300: '#ddb962',
									400: '#d3a142',
									500: '#c48e35',
									600: '#a86f2c',
									700: '#8e5628',
									800: '#744427',
									900: '#633a25',
									950: '#391e13',
								},
							},
						},
					},
				};
			</script>
			
			<!-- HTMX -->
			<script src="https://unpkg.com/htmx.org@1.9.2" integrity="sha384-L6OqL9pRWyyFU3+/bjdSri+iIphTN/bvYyM37tICVyOJkWZLpP2vGn6VUEXgzg6h" crossorigin="anonymous"></script>
			
			<!-- Internal styles -->
			<style>
				body {
					background-color: rgb(243, 244, 245);
				}
				.bg-hero {
					background-image: linear-gradient(rgba(0, 0, 0, 0.65), rgba(0, 0, 0, 0.55)), url('/assets/images/background.jpg');
					background-size: cover;
					background-position: center;
				}
			</style>
		</head>
		<body class="flex flex-col h-screen">
			<!-- Navigation -->
			@Nav(data)
			
			<!-- Promotion Banner -->
			if data.ActivePromotion != nil && !data.Authenticated {
				@PromotionBanner(data)
			}
			
			<!-- Flash Messages -->
			<div class="container px-3 mx-auto">
				if data.Error != "" {
					<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4 mt-4 text-center" role="alert">
						<span class="block sm:inline text-center">{ data.Error }</span>
					</div>
				}
				
				if data.Success != "" {
					<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4 mt-4 text-center" role="alert">
						<span class="block sm:inline text-center">{ data.Success }</span>
					</div>
				}
			</div>
			
			<main class="flex-grow mt-16"> <!-- Add margin top to account for fixed navbar -->
				if data.IsCasbinAdmin && isAdminPath(data.CurrentPath) {
					<div class="flex">
						<!-- Admin Sidebar -->
						@AdminSidebar(data.CurrentPath)
						
						<!-- Main Content with Sidebar -->
						<div class="ml-64 min-h-[calc(100vh-4rem)] p-6 flex-grow bg-white">
							@children
						</div>
					</div>
				} else {
					<!-- Regular Content -->
					<div class="container px-3 mx-auto">
						@children
					</div>
				}
			</main>
			@Footer()
			
			<!-- JavaScript for mobile menu toggle -->
			<script>
				document.addEventListener('DOMContentLoaded', function() {
					// Mobile menu toggle
					const navToggle = document.getElementById('nav-toggle');
					const navContent = document.getElementById('nav-content');
					
					if (navToggle && navContent) {
						navToggle.addEventListener('click', function() {
							navContent.classList.toggle('hidden');
						});
					}
					
					// Auto-dismiss flash messages after 5 seconds
					const flashMessages = document.querySelectorAll('.mb-4.bg-green-100, .mb-4.bg-yellow-100, .mb-4.bg-red-100');
					if (flashMessages.length > 0) {
						setTimeout(() => {
							flashMessages.forEach(flash => {
								flash.style.transition = 'opacity 1s ease-out';
								flash.style.opacity = '0';
								setTimeout(() => {
									flash.style.display = 'none';
								}, 1000);
							});
						}, 5000);
					}
				});
			</script>
		</body>
	</html>
} 