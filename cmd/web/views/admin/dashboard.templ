package admin

import (
	"fmt"
	"io"
	"context"
	"strconv"

	"github.com/hail2skins/armory/cmd/web/views/data"
	"github.com/hail2skins/armory/cmd/web/views/partials"
)

// Helper function to return the appropriate sort order for a column
func getSortOrder(currentSortBy string, columnName string, currentSortOrder string) string {
	if currentSortBy == columnName {
		if currentSortOrder == "asc" {
			return "desc"
		}
		return "asc"
	}
	return "asc"
}

// Helper function for sort icons
templ sortIcon(sortBy string, column string, sortOrder string) {
	if sortBy == column {
		if sortOrder == "asc" {
			<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
				<path fill-rule="evenodd" d="M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z" clip-rule="evenodd" />
			</svg>
		} else {
			<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
				<path fill-rule="evenodd" d="M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z" clip-rule="evenodd" />
			</svg>
		}
	} else {
		<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
			<path d="M5 12a1 1 0 102 0V6.414l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L5 6.414V12zM15 8a1 1 0 10-2 0v5.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L15 13.586V8z" />
		</svg>
	}
}

// Helper function to get sort icon class
func getSortIconClass(sortBy string, column string, sortOrder string) string {
	if sortBy == column {
		if sortOrder == "asc" {
			return "text-brass-600"
		}
		return "text-brass-600 transform rotate-180"
	}
	return "text-gray-500"
}

// Helper function for min value
func min(a, b int) int {
	if a < b {
		return a
	}
	return b
}

// Helper function to render sort icons as HTML
func renderSortIcon(sortBy string, column string, sortOrder string) string {
	if sortBy == column {
		if sortOrder == "asc" {
			return `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 text-brass-600" viewBox="0 0 20 20" fill="currentColor">
				<path fill-rule="evenodd" d="M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z" clip-rule="evenodd" />
			</svg>`
		} else {
			return `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 text-brass-600" viewBox="0 0 20 20" fill="currentColor">
				<path fill-rule="evenodd" d="M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z" clip-rule="evenodd" />
			</svg>`
		}
	} else {
		return `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
			<path d="M5 12a1 1 0 102 0V6.414l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L5 6.414V12zM15 8a1 1 0 10-2 0v5.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L15 13.586V8z" />
		</svg>`
	}
}

// Dashboard renders the admin dashboard
templ Dashboard(data *data.AdminData) {
	@partials.Base(data.AuthData, templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		_, err := io.WriteString(w, `
				<div class="bg-white shadow-md rounded-lg p-6">
					<h1 class="text-2xl font-bold mb-6 text-gunmetal-800">Admin Dashboard</h1>
		`)
		if err != nil {
			return err
		}

		if data.Success != "" {
			_, err = io.WriteString(w, `
					<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
						<span class="block sm:inline">`+data.Success+`</span>
					</div>
			`)
			if err != nil {
				return err
			}
		}

		if data.Error != "" {
			_, err = io.WriteString(w, `
					<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
						<span class="block sm:inline">`+data.Error+`</span>
					</div>
			`)
			if err != nil {
				return err
			}
		}

		_, err = io.WriteString(w, `
					<div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
						<div class="bg-blue-50 p-4 rounded-lg shadow-md border border-blue-100">
							<h3 class="text-lg font-semibold mb-2 text-blue-800">Total Users</h3>
							<p class="text-3xl font-bold text-blue-900">`+fmt.Sprint(data.TotalUsers)+`</p>
							<p class="text-sm text-blue-700 mt-2">`+fmt.Sprintf("%+.0f%%", data.UserGrowthRate)+` from last month</p>
						</div>
						
						<div class="bg-green-50 p-4 rounded-lg shadow-md border border-green-100">
							<h3 class="text-lg font-semibold mb-2 text-green-800">Subscribed Users</h3>
							<p class="text-3xl font-bold text-green-900">`+fmt.Sprint(data.SubscribedUsers)+`</p>
							<p class="text-sm text-green-700 mt-2">`+fmt.Sprintf("%+.0f%%", data.SubscribedGrowthRate)+` from last month</p>
						</div>
						
						<div class="bg-purple-50 p-4 rounded-lg shadow-md border border-purple-100">
							<h3 class="text-lg font-semibold mb-2 text-purple-800">New Registrations</h3>
							<p class="text-3xl font-bold text-purple-900">`+fmt.Sprint(data.NewRegistrations)+`</p>
							<p class="text-sm text-purple-700 mt-2">`+fmt.Sprintf("%+.0f%%", data.NewRegistrationsGrowthRate)+` from last month</p>
						</div>
						
						<div class="bg-yellow-50 p-4 rounded-lg shadow-md border border-yellow-100">
							<h3 class="text-lg font-semibold mb-2 text-yellow-800">New Subscriptions</h3>
							<p class="text-3xl font-bold text-yellow-900">`+fmt.Sprint(data.NewSubscriptions)+`</p>
							<p class="text-sm text-yellow-700 mt-2">`+fmt.Sprintf("%+.0f%%", data.NewSubscriptionsGrowthRate)+` from last month</p>
						</div>
					</div>
					
					<div class="mb-8">
						<h2 class="text-xl font-semibold mb-4 text-gunmetal-800">Recent Users</h2>
						<div class="flex justify-between items-center mb-4">
							<div class="flex items-center space-x-3">
								<form action="/admin/dashboard" method="GET" class="flex items-center space-x-2">
									<input 
										type="text" 
										name="search" 
										value="`+data.SearchQuery+`" 
										placeholder="Search by email..." 
										class="border border-gunmetal-300 rounded px-3 py-1 text-sm text-gunmetal-700"
									>
									<input type="hidden" name="sortBy" value="`+data.SortBy+`">
									<input type="hidden" name="sortOrder" value="`+data.SortOrder+`">
									<input type="hidden" name="page" value="1">
									<input type="hidden" name="perPage" value="`+strconv.Itoa(data.PerPage)+`">
									<button type="submit" class="px-3 py-1 bg-brass-500 hover:bg-brass-600 text-white rounded-md text-sm">
										Search
									</button>
								</form>
								<span class="mr-2 text-gunmetal-700">Show:</span>
								<select id="perPage" class="border border-gunmetal-300 rounded px-2 py-1 text-sm text-gunmetal-700" hx-get="/admin/dashboard" hx-target="#usersTable" hx-swap="outerHTML" hx-trigger="change">
		`)
		if err != nil {
			return err
		}

		// Render the per page options
		perPageOptions := []int{10, 25, 50, 100}
		for _, option := range perPageOptions {
			if data.PerPage == option {
				_, err = io.WriteString(w, `<option value="`+strconv.Itoa(option)+`" selected>`+strconv.Itoa(option)+`</option>`)
			} else {
				_, err = io.WriteString(w, `<option value="`+strconv.Itoa(option)+`">`+strconv.Itoa(option)+`</option>`)
			}
			if err != nil {
				return err
			}
		}

		_, err = io.WriteString(w, `
								</select>
							</div>
						</div>
						<div class="overflow-x-auto" id="usersTable">
							<table class="min-w-full bg-white border border-gunmetal-200 rounded-lg overflow-hidden">
								<thead class="bg-gunmetal-200">
									<tr>
										<th class="py-3 px-4 text-left text-gunmetal-800">
											<a href="/admin/dashboard?sortBy=email&sortOrder=`+getSortOrder(data.SortBy, "email", data.SortOrder)+`&page=`+strconv.Itoa(data.CurrentPage)+`&perPage=`+strconv.Itoa(data.PerPage)+`" class="flex items-center">
												Email
												`+renderSortIcon(data.SortBy, "email", data.SortOrder)+`
											</a>
										</th>
										<th class="py-3 px-4 text-left text-gunmetal-800">
											<a href="/admin/dashboard?sortBy=created_at&sortOrder=`+getSortOrder(data.SortBy, "created_at", data.SortOrder)+`&page=`+strconv.Itoa(data.CurrentPage)+`&perPage=`+strconv.Itoa(data.PerPage)+`" class="flex items-center">
												Registered
												`+renderSortIcon(data.SortBy, "created_at", data.SortOrder)+`
											</a>
										</th>
										<th class="py-3 px-4 text-left text-gunmetal-800">
											<a href="/admin/dashboard?sortBy=last_login&sortOrder=`+getSortOrder(data.SortBy, "last_login", data.SortOrder)+`&page=`+strconv.Itoa(data.CurrentPage)+`&perPage=`+strconv.Itoa(data.PerPage)+`" class="flex items-center">
												Last Login
												`+renderSortIcon(data.SortBy, "last_login", data.SortOrder)+`
											</a>
										</th>
										<th class="py-3 px-4 text-left text-gunmetal-800">
											<a href="/admin/dashboard?sortBy=subscription_tier&sortOrder=`+getSortOrder(data.SortBy, "subscription_tier", data.SortOrder)+`&page=`+strconv.Itoa(data.CurrentPage)+`&perPage=`+strconv.Itoa(data.PerPage)+`" class="flex items-center">
												Subscribed
												`+renderSortIcon(data.SortBy, "subscription_tier", data.SortOrder)+`
											</a>
										</th>
										<th class="py-3 px-4 text-left text-gunmetal-800">
											<span class="flex items-center">
												Guns
											</span>
										</th>
										<th class="py-3 px-4 text-left text-gunmetal-800">
											<a href="/admin/dashboard?sortBy=deleted&sortOrder=`+getSortOrder(data.SortBy, "deleted", data.SortOrder)+`&page=`+strconv.Itoa(data.CurrentPage)+`&perPage=`+strconv.Itoa(data.PerPage)+`" class="flex items-center">
												Deleted
												`+renderSortIcon(data.SortBy, "deleted", data.SortOrder)+`
											</a>
										</th>
										<th class="py-3 px-4 text-left text-gunmetal-800">Actions</th>
									</tr>
								</thead>
								<tbody class="divide-y divide-gunmetal-200">
		`)
		if err != nil {
			return err
		}

		if len(data.RecentUsers) == 0 {
			_, err = io.WriteString(w, `
									<tr>
										<td colspan="7" class="py-4 px-4 text-center text-gunmetal-700">No users found</td>
									</tr>
			`)
			if err != nil {
				return err
			}
		} else {
			for _, user := range data.RecentUsers {
				_, err = io.WriteString(w, `
									<tr class="hover:bg-gunmetal-50">
										<td class="py-3 px-4 text-gunmetal-800">
											<a href="/admin/users/`+fmt.Sprint(user.GetID())+`" class="text-brass-600 hover:text-brass-700 hover:underline">`+user.GetUserName()+`</a>
										</td>
										<td class="py-3 px-4 text-gunmetal-800">`+user.GetCreatedAt().Format("Jan 2, 2006")+`</td>
										<td class="py-3 px-4 text-gunmetal-800">
					`)
				if err != nil {
					return err
				}

				if user.GetLastLogin().IsZero() {
					_, err = io.WriteString(w, `<span class="italic text-gunmetal-600">Never</span>`)
				} else {
					_, err = io.WriteString(w, `<span>`+user.GetLastLogin().Format("Jan 2, 2006")+`</span>`)
				}
				if err != nil {
					return err
				}

				_, err = io.WriteString(w, `
										</td>
										<td class="py-3 px-4">
					`)
				if err != nil {
					return err
				}

				// Subscription tier badge
				switch user.GetSubscriptionTier() {
				case "free":
					_, err = io.WriteString(w, `<span class="px-2 py-1 bg-gray-200 text-gray-800 rounded-full text-xs font-medium">Free</span>`)
				case "monthly":
					_, err = io.WriteString(w, `<span class="px-2 py-1 bg-blue-200 text-blue-800 rounded-full text-xs font-medium">Monthly</span>`)
				case "yearly":
					_, err = io.WriteString(w, `<span class="px-2 py-1 bg-green-200 text-green-800 rounded-full text-xs font-medium">Yearly</span>`)
				case "lifetime":
					_, err = io.WriteString(w, `<span class="px-2 py-1 bg-purple-200 text-purple-800 rounded-full text-xs font-medium">Lifetime</span>`)
				case "premium":
					_, err = io.WriteString(w, `<span class="px-2 py-1 bg-yellow-200 text-yellow-800 rounded-full text-xs font-medium">Premium</span>`)
				case "promotion":
					_, err = io.WriteString(w, `<span class="px-2 py-1 bg-pink-200 text-pink-800 rounded-full text-xs font-medium">Promotion</span>`)
				case "admin_grant":
					_, err = io.WriteString(w, `<span class="px-2 py-1 bg-cyan-200 text-cyan-800 rounded-full text-xs font-medium">Admin Grant</span>`)
				}
				if err != nil {
					return err
				}

				_, err = io.WriteString(w, `
										</td>
										<td class="py-3 px-4 text-gunmetal-800">
											<a href="/admin/guns?user=`+fmt.Sprint(user.GetID())+`" class="text-brass-600 hover:text-brass-700 hover:underline flex items-center">
												<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
													<path fillRule="evenodd" d="M18 4H10.472l-1.21-2.416A2 2 0 0 0 7.566 0H2a2 2 0 0 0-2 2v9a1 1 0 0 0 1 1h.643c.534 0 1.022.304 1.257.784L3.5 14.316V17a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-1h8v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-2.684l.6-1.532A1.5 1.5 0 0 1 19.357 12H20a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-2z" clip-rule="evenodd" />
												</svg>
												`+fmt.Sprintf("%d", user.GetGunCount())+`
											</a>
										</td>
										<td class="py-3 px-4">
					`)
				if err != nil {
					return err
				}

				// Deleted status badge
				if user.IsDeleted() {
					_, err = io.WriteString(w, `<span class="px-2 py-1 bg-red-200 text-red-800 rounded-full text-xs font-medium">Yes</span>`)
				} else {
					_, err = io.WriteString(w, `<span class="px-2 py-1 bg-green-200 text-green-800 rounded-full text-xs font-medium">No</span>`)
				}
				if err != nil {
					return err
				}

				_, err = io.WriteString(w, `
										</td>
										<td class="py-3 px-4 flex space-x-2">
											<a href="/admin/users/`+fmt.Sprint(user.GetID())+`/edit" class="px-3 py-1 bg-brass-500 hover:bg-brass-600 text-white rounded-md text-sm inline-block">Edit</a>
					`)
				if err != nil {
					return err
				}

				if !user.IsDeleted() {
					_, err = io.WriteString(w, `<a href="/admin/users/`+fmt.Sprint(user.GetID())+`/delete" class="px-3 py-1 bg-red-600 hover:bg-red-700 text-white rounded-md text-sm inline-block">Delete</a>`)
				} else {
					_, err = io.WriteString(w, `<a href="/admin/users/`+fmt.Sprint(user.GetID())+`/restore" class="px-3 py-1 bg-green-600 hover:bg-green-700 text-white rounded-md text-sm inline-block">Restore</a>`)
				}
				if err != nil {
					return err
				}

				_, err = io.WriteString(w, `
										</td>
									</tr>
					`)
				if err != nil {
					return err
				}
			}
		}

		_, err = io.WriteString(w, `
								</tbody>
							</table>
						</div>
		`)
		if err != nil {
			return err
		}

		// Pagination
		if data.TotalPages > 1 {
			_, err = io.WriteString(w, `
						<div class="mt-4 flex justify-between items-center">
							<div class="flex space-x-1">
			`)
			if err != nil {
				return err
			}

			// Previous button
			if data.CurrentPage > 1 {
				_, err = io.WriteString(w, `<a href="/admin/dashboard?page=`+strconv.Itoa(data.CurrentPage-1)+`&perPage=`+strconv.Itoa(data.PerPage)+`&sortBy=`+data.SortBy+`&sortOrder=`+data.SortOrder+`" class="px-3 py-1 bg-gunmetal-200 text-gunmetal-800 rounded hover:bg-gunmetal-300">Previous</a>`)
			} else {
				_, err = io.WriteString(w, `<span class="px-3 py-1 bg-gunmetal-100 text-gunmetal-400 rounded cursor-not-allowed">Previous</span>`)
			}
			if err != nil {
				return err
			}

			// Page numbers
			for i := 1; i <= data.TotalPages; i++ {
				if i == data.CurrentPage {
					_, err = io.WriteString(w, `<span class="px-3 py-1 bg-brass-500 text-white rounded">`+strconv.Itoa(i)+`</span>`)
				} else {
					_, err = io.WriteString(w, `<a href="/admin/dashboard?page=`+strconv.Itoa(i)+`&perPage=`+strconv.Itoa(data.PerPage)+`&sortBy=`+data.SortBy+`&sortOrder=`+data.SortOrder+`" class="px-3 py-1 bg-gunmetal-200 text-gunmetal-800 rounded hover:bg-gunmetal-300">`+strconv.Itoa(i)+`</a>`)
				}
				if err != nil {
					return err
				}
			}

			// Next button
			if data.CurrentPage < data.TotalPages {
				_, err = io.WriteString(w, `<a href="/admin/dashboard?page=`+strconv.Itoa(data.CurrentPage+1)+`&perPage=`+strconv.Itoa(data.PerPage)+`&sortBy=`+data.SortBy+`&sortOrder=`+data.SortOrder+`" class="px-3 py-1 bg-gunmetal-200 text-gunmetal-800 rounded hover:bg-gunmetal-300">Next</a>`)
			} else {
				_, err = io.WriteString(w, `<span class="px-3 py-1 bg-gunmetal-100 text-gunmetal-400 rounded cursor-not-allowed">Next</span>`)
			}
			if err != nil {
				return err
			}

			_, err = io.WriteString(w, `
							</div>
							<div class="text-sm text-gunmetal-600">
								Showing `+strconv.Itoa((data.CurrentPage-1)*data.PerPage+1)+` to `+strconv.Itoa(min((data.CurrentPage)*data.PerPage, int(data.TotalUsers)))+` of `+strconv.Itoa(int(data.TotalUsers))+` users
							</div>
						</div>
			`)
			if err != nil {
				return err
			}
		}

		_, err = io.WriteString(w, `
						<div class="mt-4 text-right">
							<a href="/admin/users" class="text-brass-600 hover:text-brass-700 font-medium">View All Users →</a>
						</div>
					</div>
					
					<div>
						<h2 class="text-xl font-semibold mb-4 text-gunmetal-800">System Status</h2>
						<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
							<div class="bg-gunmetal-100 p-4 rounded-lg border border-gunmetal-200 shadow-md">
								<h3 class="text-lg font-semibold mb-2 text-gunmetal-800">Server Health</h3>
								<div class="flex items-center">
									<div class="w-3 h-3 bg-green-500 rounded-full mr-2"></div>
									<p class="text-gunmetal-800">All systems operational</p>
								</div>
								<div class="mt-4">
									<a href="/admin/detailed-health" class="px-4 py-2 bg-brass-500 hover:bg-brass-600 text-white rounded-md inline-block text-sm font-medium">View Detailed Health</a>
								</div>
							</div>
							
							<div class="bg-gunmetal-100 p-4 rounded-lg border border-gunmetal-200 shadow-md">
								<h3 class="text-lg font-semibold mb-2 text-gunmetal-800">Error Metrics</h3>
								<div class="flex items-center">
									<div class="w-3 h-3 bg-green-500 rounded-full mr-2"></div>
									<p class="text-gunmetal-800">No critical errors</p>
								</div>
								<div class="mt-4">
									<a href="/admin/error-metrics" class="px-4 py-2 bg-brass-500 hover:bg-brass-600 text-white rounded-md inline-block text-sm font-medium">View Error Metrics</a>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		`)
		return err
	}))
} 