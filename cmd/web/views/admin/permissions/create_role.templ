package permissions

import (
	"context"
	"io"

	"github.com/hail2skins/armory/cmd/web/views/data"
	"github.com/hail2skins/armory/cmd/web/views/partials"
)

templ CreateRole(viewData data.ViewData) {
	@partials.Base(viewData.AuthData, templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		formData := viewData.Data.(*data.CreateRoleViewData)
		
		_, err := io.WriteString(w, `
			<div class="container mx-auto px-4 py-8">
				<div class="mb-8">
					<h1 class="text-2xl font-bold text-gunmetal-800">Create New Role</h1>
					<p class="text-gray-600">Define a new role with specific permissions.</p>
				</div>
		`)
		if err != nil {
			return err
		}

		if viewData.ErrorMsg != "" {
			_, err = io.WriteString(w, `
				<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4" role="alert">
					<span class="block sm:inline">`+viewData.ErrorMsg+`</span>
				</div>
			`)
			if err != nil {
				return err
			}
		}

		_, err = io.WriteString(w, `
			<div class="bg-white rounded-lg shadow">
				<div class="p-6">
					<form method="POST" action="/admin/permissions/roles/create">
						<input type="hidden" name="csrf_token" value="`+viewData.AuthData.CSRFToken+`">
						<div class="mb-6">
							<label for="role" class="block text-gray-700 font-medium mb-2">Role Name</label>
							<input type="text" id="role" name="role" required
									class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-brass-500">
							<p class="text-gray-500 text-sm mt-1">Role name should be lowercase and descriptive (e.g., editor, viewer)</p>
						</div>

						<div class="mb-6">
							<h3 class="text-lg font-semibold mb-3">Permissions</h3>
							<p class="text-gray-500 text-sm mb-4">Select resources and actions this role should have access to.</p>

							<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
		`)
		if err != nil {
			return err
		}

		for _, resource := range formData.Resources {
			_, err = io.WriteString(w, `
								<div class="border rounded-lg p-4">
									<div class="flex justify-between items-center cursor-pointer" onclick="toggleResourcePermissions('`+resource+`')">
										<h4 class="font-medium">`+resource+`</h4>
										<svg id="icon-`+resource+`" class="h-5 w-5 transform transition-transform duration-200" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
											<path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
										</svg>
									</div>
									<div id="permissions-`+resource+`" class="space-y-2 mt-2 hidden">
			`)
			if err != nil {
				return err
			}
			
			for _, action := range formData.Actions {
				_, err = io.WriteString(w, `
										<div class="flex items-center">
											<input type="checkbox" id="perm_`+resource+`_`+action+`" name="permissions" value="`+resource+`:`+action+`" 
													class="mr-2 h-4 w-4 text-brass-600 focus:ring-brass-500 border-gray-300 rounded">
											<label for="perm_`+resource+`_`+action+`" class="text-gray-700">`+action+`</label>
										</div>
				`)
				if err != nil {
					return err
				}
			}
			
			_, err = io.WriteString(w, `
									</div>
								</div>
			`)
			if err != nil {
				return err
			}
		}

		_, err = io.WriteString(w, `
							</div>
						</div>

						<div class="flex items-center justify-between">
							<a href="/admin/permissions" class="text-brass-600 hover:text-brass-700">Cancel</a>
							<button type="submit" class="bg-brass-500 hover:bg-brass-600 text-white font-medium py-2 px-4 rounded">
								Create Role
							</button>
						</div>
					</form>
				</div>
			</div>

			<script>
				function toggleResourcePermissions(resource) {
					const permissionsDiv = document.getElementById('permissions-' + resource);
					const icon = document.getElementById('icon-' + resource);
					
					if (permissionsDiv.classList.contains('hidden')) {
						permissionsDiv.classList.remove('hidden');
						icon.classList.add('rotate-180');
					} else {
						permissionsDiv.classList.add('hidden');
						icon.classList.remove('rotate-180');
					}
				}

				// Initialize: Expand the first resource by default
				document.addEventListener('DOMContentLoaded', function() {
					const firstResource = '`+formData.Resources[0]+`';
					toggleResourcePermissions(firstResource);
				});
			</script>
		`)
		return err
	}))
} 