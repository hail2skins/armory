package munitions

import (
	"context"
	"fmt"
	"io"
	"strconv"
	"time"

	"github.com/hail2skins/armory/cmd/web/views/data"
	"github.com/hail2skins/armory/cmd/web/views/partials"
)

// formatDate formats a time.Time value as a human-readable date
func formatDate(t *time.Time) string {
	if t == nil {
		return "Unknown"
	}
	return t.Format("Jan 2, 2006")
}

// formatPrice formats a price for display
func formatPrice(price *float64) string {
	if price == nil {
		return "Unknown"
	}
	return fmt.Sprintf("$%.2f", *price)
}

templ Index(data *data.OwnerData) {
	@partials.Base(data.Auth, templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		_, err := io.WriteString(w, `
		<div class="relative min-h-screen" style="background-image: url('/assets/munitions.png'); background-size: cover; background-position: center; background-repeat: no-repeat;">
			<!-- Overlay to fade the background image -->
			<div class="absolute inset-0 bg-white bg-opacity-80"></div>
			
			<!-- Content on top of the background -->
			<div class="relative container mx-auto px-4 py-8">
				<div class="flex justify-between items-center mb-6">
					<h1 class="text-3xl font-bold text-gunmetal-800">Your Ammunition</h1>
					<div class="flex space-x-4">
						<a href="/owner" class="bg-gunmetal-600 hover:bg-gunmetal-700 text-white font-bold py-2 px-4 rounded">
							Back to Dashboard
						</a>
						<a href="/owner/munitions/new" class="bg-amber-600 hover:bg-amber-700 text-white font-bold py-2 px-4 rounded">
							Add New Ammunition
						</a>
					</div>
				</div>
		`)
		if err != nil {
			return err
		}

		if data.Auth.Success != "" {
			_, err = io.WriteString(w, `
			<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4 text-center" role="alert">
				<span class="block sm:inline">`+data.Auth.Success+`</span>
			</div>
			`)
			if err != nil {
				return err
			}
		}

		if data.Auth.Error != "" {
			_, err = io.WriteString(w, `
			<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4 text-center" role="alert">
				<span class="block sm:inline">`+data.Auth.Error+`</span>
			</div>
			`)
			if err != nil {
				return err
			}
		}

		// Ammunition Statistics
		_, err = io.WriteString(w, `
		<div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
			<div class="bg-gunmetal-100 bg-opacity-80 p-4 rounded-lg shadow">
				<h3 class="font-semibold text-lg text-gunmetal-800 mb-2">Ammunition Overview</h3>
				<p class="text-gunmetal-800"><strong>Total Entries:</strong> `+strconv.FormatInt(data.AmmoCount, 10)+`</p>
				<p class="text-gunmetal-800"><strong>Total Rounds:</strong> `+strconv.FormatInt(data.TotalAmmoQuantity, 10)+`</p>
				<p class="text-sm text-gunmetal-600 mt-2">Showing `+strconv.Itoa(data.ShowingFrom)+`-`+strconv.Itoa(data.ShowingTo)+` of `+strconv.Itoa(data.TotalItems)+`</p>
			</div>
			<div class="bg-gunmetal-100 bg-opacity-80 p-4 rounded-lg shadow">
				<h3 class="font-semibold text-lg text-gunmetal-800 mb-2">Cost Summary</h3>
				<p class="text-gunmetal-800"><strong>Total Paid:</strong> $`+strconv.FormatFloat(data.TotalAmmoPaid, 'f', 2, 64)+`</p>
				<p class="text-gunmetal-800"><strong>Price Per Round:</strong> $`+func() string {
					if data.TotalAmmoQuantity > 0 {
						pricePerRound := data.TotalAmmoPaid / float64(data.TotalAmmoQuantity)
						return strconv.FormatFloat(pricePerRound, 'f', 3, 64)
					}
					return "0.000"
				}()+`</p>
				<p class="text-sm text-gunmetal-600 mt-2">Track your ammunition spending</p>
			</div>
			<div class="bg-gunmetal-100 bg-opacity-80 p-4 rounded-lg shadow">
				<h3 class="font-semibold text-lg text-gunmetal-800 mb-2">Quick Links</h3>
				<div class="flex flex-col space-y-2">
					<a href="/owner/munitions/new" class="text-brass-700 hover:text-brass-500 underline">Add New Ammunition</a>
					<a href="/owner" class="text-brass-700 hover:text-brass-500 underline">Back to Dashboard</a>
					<a href="/owner/guns/arsenal" class="text-brass-700 hover:text-brass-500 underline">View Arsenal</a>
				</div>
			</div>
		</div>
		`)
		if err != nil {
			return err
		}

		// Search and filter controls
		_, err = io.WriteString(w, `
		<div class="mb-6">
			<form action="/owner/munitions" method="GET" class="flex flex-col md:flex-row gap-2">
				<div class="flex-grow">
					<input 
						type="text" 
						name="search" 
						value="`+data.SearchTerm+`"
						placeholder="Search ammunition..." 
						class="w-full px-4 py-2 text-gunmetal-800 border border-gunmetal-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brass-400"
					>
				</div>
				<div class="md:w-48">
					<select name="sortBy" class="w-full px-4 py-2 text-gunmetal-800 border border-gunmetal-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brass-400">
						<option value="name" `+func() string {
							if data.SortBy == "name" {
								return "selected"
							}
							return ""
						}()+`>Sort by Name</option>
						<option value="created_at" `+func() string {
							if data.SortBy == "created_at" {
								return "selected"
							}
							return ""
						}()+`>Sort by Date Added</option>
						<option value="acquired" `+func() string {
							if data.SortBy == "acquired" {
								return "selected"
							}
							return ""
						}()+`>Sort by Date Acquired</option>
						<option value="brand" `+func() string {
							if data.SortBy == "brand" {
								return "selected"
							}
							return ""
						}()+`>Sort by Brand</option>
						<option value="caliber" `+func() string {
							if data.SortBy == "caliber" {
								return "selected"
							}
							return ""
						}()+`>Sort by Caliber</option>
						<option value="count" `+func() string {
							if data.SortBy == "count" {
								return "selected"
							}
							return ""
						}()+`>Sort by Quantity</option>
					</select>
				</div>
				<div class="md:w-40">
					<select name="sortOrder" class="w-full px-4 py-2 text-gunmetal-800 border border-gunmetal-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brass-400">
						<option value="asc" `+func() string {
							if data.SortOrder == "asc" {
								return "selected"
							}
							return ""
						}()+`>Ascending</option>
						<option value="desc" `+func() string {
							if data.SortOrder == "desc" {
								return "selected"
							}
							return ""
						}()+`>Descending</option>
					</select>
				</div>
				<div class="md:w-36">
					<select name="perPage" class="w-full px-4 py-2 text-gunmetal-800 border border-gunmetal-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-brass-400">
						<option value="10" `+func() string {
							if data.PerPage == 10 {
								return "selected"
							}
							return ""
						}()+`>10 per page</option>
						<option value="25" `+func() string {
							if data.PerPage == 25 {
								return "selected"
							}
							return ""
						}()+`>25 per page</option>
						<option value="50" `+func() string {
							if data.PerPage == 50 {
								return "selected"
							}
							return ""
						}()+`>50 per page</option>
					</select>
				</div>
				<button type="submit" class="px-4 py-2 bg-brass-400 hover:bg-brass-300 text-white font-medium rounded">
					Apply
				</button>
				`+func() string {
					if data.HasFiltersApplied {
						return `<a href="/owner/munitions" class="px-4 py-2 bg-gunmetal-400 hover:bg-gunmetal-300 text-white font-medium rounded">
							Reset
						</a>`
					}
					return ""
				}()+`
			</form>
		</div>
		`)
		if err != nil {
			return err
		}

		// Content section
		if len(data.Ammo) == 0 {
			_, err = io.WriteString(w, `
			<div class="bg-white bg-opacity-90 shadow-md rounded p-8 mb-4 text-center">
				<p class="text-lg text-gray-700 mb-4">You haven't added any ammunition yet.</p>
				<a href="/owner/munitions/new" class="bg-amber-600 hover:bg-amber-700 text-white font-bold py-2 px-4 rounded">
					Add Your First Ammunition
				</a>
			</div>
			`)
			if err != nil {
				return err
			}
		} else {
			// Show ammo table
			_, err = io.WriteString(w, `
			<div class="overflow-x-auto bg-white bg-opacity-90 shadow-md rounded">
				<table class="min-w-full">
					<thead class="bg-gunmetal-700 text-white">
						<tr>
							<th class="py-3 px-4 text-left">Name</th>
							<th class="py-3 px-4 text-left">Brand & Caliber</th>
							<th class="py-3 px-4 text-left">Quantity</th>
							<th class="py-3 px-4 text-left">Acquired</th>
							<th class="py-3 px-4 text-left">Paid</th>
							<th class="py-3 px-4 text-left">Actions</th>
						</tr>
					</thead>
					<tbody class="divide-y divide-gray-200">
			`)
			if err != nil {
				return err
			}

			// Loop through each ammo record
			for i, ammo := range data.Ammo {
				ammoID := strconv.FormatUint(uint64(ammo.ID), 10)
				acquiredDate := formatDate(ammo.Acquired)
				paidAmount := formatPrice(ammo.Paid)
				
				// Alternate row background for better readability, but keep transparent
				bgClass := "bg-opacity-70"
				if i%2 == 0 {
					bgClass = "bg-gray-50 bg-opacity-70"
				} else {
					bgClass = "bg-white bg-opacity-70" 
				}

				_, err = io.WriteString(w, `
						<tr class="`+bgClass+` hover:bg-gray-100 hover:bg-opacity-80">
							<td class="py-3 px-4">
								<a href="/owner/munitions/`+ammoID+`" class="text-gunmetal-800 hover:text-gunmetal-600 font-medium hover:underline">`+ammo.Name+`</a>
							</td>
							<td class="py-3 px-4">
								`+ammo.Brand.Name+` `+ammo.Caliber.Caliber+`
							</td>
							<td class="py-3 px-4">
								`+strconv.Itoa(ammo.Count)+` rounds
							</td>
							<td class="py-3 px-4">
								`+acquiredDate+`
							</td>
							<td class="py-3 px-4">
								`+paidAmount+`
							</td>
							<td class="py-3 px-4">
								<div class="flex space-x-3">
									<a href="/owner/munitions/`+ammoID+`" class="text-gunmetal-600 hover:text-gunmetal-800" title="View Details">
										<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
										</svg>
									</a>
									<a href="/owner/munitions/`+ammoID+`/edit" class="text-blue-600 hover:text-blue-800" title="Edit">
										<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
										</svg>
									</a>
									<form action="/owner/munitions/`+ammoID+`/delete" method="POST" class="inline" onsubmit="return confirm('Are you sure you want to delete this ammunition?');">
										<input type="hidden" name="csrf_token" value="`+data.Auth.CSRFToken+`">
										<button type="submit" class="text-red-600 hover:text-red-800" title="Delete">
											<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
											</svg>
										</button>
									</form>
								</div>
							</td>
						</tr>
				`)
				if err != nil {
					return err
				}
			}

			_, err = io.WriteString(w, `
					</tbody>
				</table>
			</div>
			`)
			if err != nil {
				return err
			}

			// Add pagination controls
			if data.TotalPages > 1 {
				_, err = io.WriteString(w, `
				<div class="mt-6 flex justify-between items-center">
					<div class="text-sm text-gray-700">
						Showing <span class="font-medium">`+strconv.Itoa(data.ShowingFrom)+`</span> to <span class="font-medium">`+strconv.Itoa(data.ShowingTo)+`</span> of <span class="font-medium">`+strconv.Itoa(data.TotalItems)+`</span> results
					</div>
					<div class="flex space-x-1">
				`)
				if err != nil {
					return err
				}

				// Previous page button
				if data.HasPreviousPage {
					prevPage := strconv.Itoa(data.CurrentPage - 1)
					_, err = io.WriteString(w, `
						<a href="/owner/munitions?page=`+prevPage+`&perPage=`+strconv.Itoa(data.PerPage)+`&sortBy=`+data.SortBy+`&sortOrder=`+data.SortOrder+`&search=`+data.SearchTerm+`" class="px-4 py-2 bg-white border border-gray-300 rounded-md text-gunmetal-700 hover:bg-gray-50">
							Previous
						</a>
					`)
					if err != nil {
						return err
					}
				} else {
					_, err = io.WriteString(w, `
						<span class="px-4 py-2 bg-gray-100 border border-gray-300 rounded-md text-gray-400 cursor-not-allowed">
							Previous
						</span>
					`)
					if err != nil {
						return err
					}
				}

				// Page number buttons
				for i := data.StartPage; i <= data.EndPage; i++ {
					pageNum := strconv.Itoa(i)
					if i == data.CurrentPage {
						_, err = io.WriteString(w, `
							<span class="px-4 py-2 bg-brass-600 border border-brass-600 rounded-md text-white">
								`+pageNum+`
							</span>
						`)
					} else {
						_, err = io.WriteString(w, `
							<a href="/owner/munitions?page=`+pageNum+`&perPage=`+strconv.Itoa(data.PerPage)+`&sortBy=`+data.SortBy+`&sortOrder=`+data.SortOrder+`&search=`+data.SearchTerm+`" class="px-4 py-2 bg-white border border-gray-300 rounded-md text-gunmetal-700 hover:bg-gray-50">
								`+pageNum+`
							</a>
						`)
					}
					if err != nil {
						return err
					}
				}

				// Next page button
				if data.HasNextPage {
					nextPage := strconv.Itoa(data.CurrentPage + 1)
					_, err = io.WriteString(w, `
						<a href="/owner/munitions?page=`+nextPage+`&perPage=`+strconv.Itoa(data.PerPage)+`&sortBy=`+data.SortBy+`&sortOrder=`+data.SortOrder+`&search=`+data.SearchTerm+`" class="px-4 py-2 bg-white border border-gray-300 rounded-md text-gunmetal-700 hover:bg-gray-50">
							Next
						</a>
					`)
					if err != nil {
						return err
					}
				} else {
					_, err = io.WriteString(w, `
						<span class="px-4 py-2 bg-gray-100 border border-gray-300 rounded-md text-gray-400 cursor-not-allowed">
							Next
						</span>
					`)
					if err != nil {
						return err
					}
				}

				// Close pagination container
				_, err = io.WriteString(w, `
					</div>
				</div>
				`)
				if err != nil {
					return err
				}
			}
		}

		// Display note if present (subscription notice for free tier users)
		if data.Note != "" {
			_, err = io.WriteString(w, `
			<div class="mt-6 p-3 bg-amber-50 text-amber-800 border border-amber-300 rounded-md">
				<p class="text-center font-medium">`+data.Note+`</p>
			</div>
			`)
			if err != nil {
				return err
			}
		}

		// Close container divs
		_, err = io.WriteString(w, `
			</div>
		</div>
		`)
		if err != nil {
			return err
		}

		return nil
	}))
} 