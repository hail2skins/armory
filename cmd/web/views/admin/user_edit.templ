package admin

import (
	"io"
	"context"
	"fmt"

	"github.com/hail2skins/armory/cmd/web/views/data"
	"github.com/hail2skins/armory/cmd/web/views/partials"
)

// UserEdit renders the form to edit a user
templ UserEdit(data *data.UserEditData) {
	@partials.Base(data.AuthData, templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		_, err := io.WriteString(w, `
			<div class="bg-white shadow-md rounded-lg p-6">
				<div class="flex justify-between items-center mb-6">
					<h1 class="text-2xl font-bold text-gunmetal-800">Edit User</h1>
					<div class="flex space-x-3">
						<a href="/admin/users" class="text-brass-600 hover:text-brass-700 flex items-center">
							<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
								<path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
							</svg>
							Back to User List
						</a>
						<a href="/admin/users/`+fmt.Sprint(data.User.GetID())+`" class="text-blue-600 hover:text-blue-700 flex items-center">
							<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
								<path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
								<path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
							</svg>
							View User
						</a>
					</div>
				</div>
		`)
		if err != nil {
			return err
		}

		// Show error message if any
		if data.Error != "" {
			_, err = io.WriteString(w, `
				<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
					<span class="block sm:inline">`+data.Error+`</span>
				</div>
			`)
			if err != nil {
				return err
			}
		}

		// Edit form
		_, err = io.WriteString(w, `
				<form method="POST" action="/admin/users/`+fmt.Sprint(data.User.GetID())+`" class="space-y-6">
					<input type="hidden" name="csrf_token" value="` + data.AuthData.CSRFToken + `">
					<div class="bg-gunmetal-50 rounded-lg p-6">
						<h2 class="text-lg font-semibold text-gunmetal-800 border-b border-gunmetal-200 pb-2 mb-4">Account Information</h2>
						
						<div class="space-y-4">
							<div>
								<label for="email" class="block text-sm font-medium text-gunmetal-700">Email Address</label>
								<input type="email" name="email" id="email" value="`+data.User.GetUserName()+`" required
									class="mt-1 block w-full border border-gunmetal-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-brass-500 focus:border-brass-500"
								>
							</div>
							
							<div>
								<label for="subscription_tier" class="block text-sm font-medium text-gunmetal-700">Subscription Tier</label>
								<select name="subscription_tier" id="subscription_tier" 
									class="mt-1 block w-full border border-gunmetal-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-brass-500 focus:border-brass-500"
								>
		`)
		if err != nil {
			return err
		}

		// Subscription tier options
		tiers := map[string]string{
			"free":             "Free",
			"monthly":          "Monthly",
			"yearly":           "Yearly",
			"lifetime":         "Lifetime",
			"premium_lifetime": "Premium Lifetime",
			"promotion":        "Promotion",
		}

		for value, label := range tiers {
			selected := ""
			if data.User.GetSubscriptionTier() == value {
				selected = "selected"
			}
			_, err = io.WriteString(w, `<option value="`+value+`" `+selected+`>`+label+`</option>`)
			if err != nil {
				return err
			}
		}

		_, err = io.WriteString(w, `
								</select>
							</div>
							
							<div class="flex items-start">
								<div class="flex items-center h-5">
		`)
		if err != nil {
			return err
		}

		// Verified checkbox
		checkedAttr := ""
		if data.User.IsVerified() {
			checkedAttr = "checked"
		}

		_, err = io.WriteString(w, `
									<input id="verified" name="verified" type="checkbox" `+checkedAttr+`
										class="focus:ring-brass-500 h-4 w-4 text-brass-600 border-gunmetal-300 rounded"
									>
								</div>
								<div class="ml-3 text-sm">
									<label for="verified" class="font-medium text-gunmetal-700">Email Verified</label>
									<p class="text-gunmetal-500">Mark the user's email as verified</p>
								</div>
							</div>
						</div>
					</div>
					
					<div class="flex justify-end space-x-3">
						<a href="/admin/users/`+fmt.Sprint(data.User.GetID())+`" class="px-4 py-2 border border-gunmetal-300 rounded-md shadow-sm text-sm font-medium text-gunmetal-700 bg-white hover:bg-gunmetal-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brass-500">
							Cancel
						</a>
						<button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-brass-600 hover:bg-brass-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brass-500">
							Save Changes
						</button>
					</div>
				</form>
			</div>
		`)
		return err
	}))
} 