package munitions

import (
	"context"
	"fmt"
	"io"
	"strconv"
	"time"

	"github.com/hail2skins/armory/cmd/web/views/data"
	"github.com/hail2skins/armory/cmd/web/views/partials"
)

// formatDetailDate formats a time.Time value as a human-readable date
func formatDetailDate(t *time.Time) string {
	if t == nil {
		return "Not specified"
	}
	return t.Format("January 2, 2006")
}

// formatDetailPrice formats a price for display
func formatDetailPrice(price *float64) string {
	if price == nil {
		return "Not specified"
	}
	return fmt.Sprintf("$%.2f", *price)
}

// formatOptionalDetail formats an optional string field
func formatOptionalDetail(value string) string {
	if value == "" {
		return "Not specified"
	}
	return value
}

templ Show(data *data.OwnerData) {
	@partials.Base(data.Auth, templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		// We expect at least one ammo item in the slice
		if len(data.Ammo) == 0 {
			_, err := io.WriteString(w, `
			<div class="container mx-auto px-4 py-8">
				<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
					<span class="block sm:inline">Ammunition not found.</span>
				</div>
				<a href="/owner/munitions" class="bg-gunmetal-600 hover:bg-gunmetal-700 text-white font-bold py-2 px-4 rounded">
					Back to Ammunition
				</a>
			</div>
			`)
			return err
		}

		// Get the first ammo item (we're only showing one)
		ammo := data.Ammo[0]
		ammoID := strconv.FormatUint(uint64(ammo.ID), 10)

		_, err := io.WriteString(w, `
		<div class="container mx-auto px-4 py-8">
			<div class="bg-white shadow-md rounded-lg overflow-hidden">
				<div class="bg-gunmetal-700 text-white px-6 py-4">
					<h1 class="text-2xl font-bold">Ammunition Details</h1>
				</div>
				
				<div class="p-6">
					<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
						<div>
							<h2 class="text-xl font-semibold text-gunmetal-800 mb-4">Basic Information</h2>
							<div class="space-y-3">
								<div>
									<span class="font-medium text-gunmetal-600">Purchase Note:</span>
									<span class="ml-2 text-gunmetal-800">`+ammo.Name+`</span>
								</div>
								
								<div>
									<span class="font-medium text-gunmetal-600">Brand:</span>
									<span class="ml-2 text-gunmetal-800">`+ammo.Brand.Name+`</span>
								</div>
								
								<div>
									<span class="font-medium text-gunmetal-600">Caliber:</span>
									<span class="ml-2 text-gunmetal-800">`+ammo.Caliber.Caliber+`</span>
								</div>
								
								<div>
									<span class="font-medium text-gunmetal-600">Quantity:</span>
									<span class="ml-2 text-gunmetal-800">`+strconv.Itoa(ammo.Count)+` rounds</span>
								</div>
								
								<div>
									<span class="font-medium text-gunmetal-600">Rounds Fired:</span>
									<span class="ml-2 text-gunmetal-800">`+strconv.Itoa(ammo.Expended)+` rounds</span>
								</div>
								
								<div>
									<span class="font-medium text-gunmetal-600">Acquisition Date:</span>
		`)
		if err != nil {
			return err
		}

		if ammo.Acquired != nil {
			_, err = io.WriteString(w, `
									<span class="ml-2 text-gunmetal-800">`+ammo.Acquired.Format("January 2, 2006")+`</span>
			`)
		} else {
			_, err = io.WriteString(w, `
									<span class="ml-2 text-gunmetal-500">Not specified</span>
			`)
		}
		if err != nil {
			return err
		}

		_, err = io.WriteString(w, `
								</div>
								
								<div>
									<span class="font-medium text-gunmetal-600">Price Paid:</span>
		`)
		if err != nil {
			return err
		}

		if ammo.Paid != nil {
			_, err = io.WriteString(w, fmt.Sprintf(`
									<span class="ml-2 text-gunmetal-800">$%.2f</span>
			`, *ammo.Paid))
		} else {
			_, err = io.WriteString(w, `
									<span class="ml-2 text-gunmetal-500">Not specified</span>
			`)
		}
		if err != nil {
			return err
		}

		_, err = io.WriteString(w, `
								</div>
							</div>
						</div>
						
						<div>
							<h2 class="text-xl font-semibold text-gunmetal-800 mb-4">Specifications</h2>
							<div class="space-y-3">
								<div>
									<span class="font-medium text-gunmetal-600">Bullet Style:</span>
		`)
		if err != nil {
			return err
		}

		// Handle bullet style display
		if ammo.BulletStyle.ID > 0 {
			_, err = io.WriteString(w, `
									<span class="ml-2 text-gunmetal-800">`+ammo.BulletStyle.Type+`</span>
			`)
		} else {
			_, err = io.WriteString(w, `
									<span class="ml-2 text-gunmetal-500">Not specified</span>
			`)
		}
		if err != nil {
			return err
		}

		_, err = io.WriteString(w, `
								</div>
								
								<div>
									<span class="font-medium text-gunmetal-600">Grain Weight:</span>
		`)
		if err != nil {
			return err
		}

		// Handle grain weight display
		if ammo.Grain.ID > 0 {
			if ammo.Grain.Weight > 0 {
				_, err = io.WriteString(w, fmt.Sprintf(`
									<span class="ml-2 text-gunmetal-800">%d gr</span>
				`, ammo.Grain.Weight))
			} else {
				_, err = io.WriteString(w, `
									<span class="ml-2 text-gunmetal-800">Other/Custom</span>
				`)
			}
		} else {
			_, err = io.WriteString(w, `
									<span class="ml-2 text-gunmetal-500">Not specified</span>
			`)
		}
		if err != nil {
			return err
		}

		_, err = io.WriteString(w, `
								</div>
								
								<div>
									<span class="font-medium text-gunmetal-600">Casing Material:</span>
		`)
		if err != nil {
			return err
		}

		// Handle casing display
		if ammo.Casing.ID > 0 {
			_, err = io.WriteString(w, `
									<span class="ml-2 text-gunmetal-800">`+ammo.Casing.Type+`</span>
			`)
		} else {
			_, err = io.WriteString(w, `
									<span class="ml-2 text-gunmetal-500">Not specified</span>
			`)
		}
		if err != nil {
			return err
		}

		_, err = io.WriteString(w, `
								</div>
								
								<div>
									<span class="font-medium text-gunmetal-600">Added to System:</span>
									<span class="ml-2 text-gunmetal-800">`+ammo.CreatedAt.Format("January 2, 2006")+`</span>
								</div>
								
								<div>
									<span class="font-medium text-gunmetal-600">Last Updated:</span>
									<span class="ml-2 text-gunmetal-800">`+ammo.UpdatedAt.Format("January 2, 2006")+`</span>
								</div>
							</div>
						</div>
					</div>
					
					<!-- Action Buttons -->
					<div class="mt-8 flex flex-wrap gap-3">
						<a href="/owner/munitions" class="bg-gunmetal-600 hover:bg-gunmetal-700 text-white font-bold py-2 px-4 rounded">
							Back to Ammunition
						</a>
						<a href="/owner/munitions/`+ammoID+`/edit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
							Edit Ammunition
						</a>
						<form method="POST" action="/owner/munitions/`+ammoID+`/delete" class="inline">
							<input type="hidden" name="csrf_token" value="` + data.Auth.CSRFToken + `">
							<button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded" onclick="return confirm('Are you sure you want to delete this ammunition?')">
								Delete Ammunition
							</button>
						</form>
					</div>
				</div>
			</div>
		</div>
		`)
		return err
	}))
} 