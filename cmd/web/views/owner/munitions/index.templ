package munitions

import (
	"context"
	"fmt"
	"io"
	"strconv"
	"time"

	"github.com/hail2skins/armory/cmd/web/views/data"
	"github.com/hail2skins/armory/cmd/web/views/partials"
)

// formatDate formats a time.Time value as a human-readable date
func formatDate(t *time.Time) string {
	if t == nil {
		return "Unknown"
	}
	return t.Format("Jan 2, 2006")
}

// formatPrice formats a price for display
func formatPrice(price *float64) string {
	if price == nil {
		return "Unknown"
	}
	return fmt.Sprintf("$%.2f", *price)
}

templ Index(data *data.OwnerData) {
	@partials.Base(data.Auth, templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		_, err := io.WriteString(w, `
		<div class="container mx-auto px-4 py-8">
			<div class="flex justify-between items-center mb-6">
				<h1 class="text-3xl font-bold text-gunmetal-800">Your Ammunition</h1>
				<div class="flex space-x-4">
					<a href="/owner" class="bg-gunmetal-600 hover:bg-gunmetal-700 text-white font-bold py-2 px-4 rounded">
						Back to Dashboard
					</a>
					<a href="/owner/munitions/new" class="bg-amber-600 hover:bg-amber-700 text-white font-bold py-2 px-4 rounded">
						Add New Ammunition
					</a>
				</div>
			</div>
		`)
		if err != nil {
			return err
		}

		if data.Auth.Success != "" {
			_, err = io.WriteString(w, `
			<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4 text-center" role="alert">
				<span class="block sm:inline">`+data.Auth.Success+`</span>
			</div>
			`)
			if err != nil {
				return err
			}
		}

		if data.Auth.Error != "" {
			_, err = io.WriteString(w, `
			<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4 text-center" role="alert">
				<span class="block sm:inline">`+data.Auth.Error+`</span>
			</div>
			`)
			if err != nil {
				return err
			}
		}

		// Search and filter controls
		_, err = io.WriteString(w, `
		<div class="flex flex-col md:flex-row gap-4 mb-6">
			<input type="text" placeholder="Search ammunition..." class="border border-gray-300 rounded-md px-4 py-2 flex-grow focus:outline-none focus:ring-2 focus:ring-gunmetal-500">
			
			<div class="flex gap-2">
				<select class="border border-gray-300 rounded-md px-4 py-2 focus:outline-none focus:ring-2 focus:ring-gunmetal-500">
					<option value="name">Sort by Name</option>
					<option value="brand">Sort by Brand</option>
					<option value="caliber">Sort by Caliber</option>
					<option value="count">Sort by Quantity</option>
					<option value="acquired">Sort by Date</option>
				</select>
				
				<select class="border border-gray-300 rounded-md px-4 py-2 focus:outline-none focus:ring-2 focus:ring-gunmetal-500">
					<option value="asc">Ascending</option>
					<option value="desc">Descending</option>
				</select>
				
				<button class="bg-gunmetal-600 hover:bg-gunmetal-700 text-white font-bold py-2 px-4 rounded">Apply</button>
				<button class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded">Reset</button>
			</div>
		</div>
		`)
		if err != nil {
			return err
		}

		// If no ammo, show empty state
		if len(data.Ammo) == 0 {
			_, err = io.WriteString(w, `
			<div class="bg-white shadow-md rounded p-8 mb-4 text-center">
				<p class="text-lg text-gray-700 mb-4">You haven't added any ammunition yet.</p>
				<a href="/owner/munitions/new" class="bg-amber-600 hover:bg-amber-700 text-white font-bold py-2 px-4 rounded">
					Add Your First Ammunition
				</a>
			</div>
			`)
			if err != nil {
				return err
			}
		} else {
			// Show ammo table
			_, err = io.WriteString(w, `
			<div class="overflow-x-auto bg-white shadow-md rounded">
				<table class="min-w-full bg-white">
					<thead class="bg-gunmetal-700 text-white">
						<tr>
							<th class="py-3 px-4 text-left">Name</th>
							<th class="py-3 px-4 text-left">Brand & Caliber</th>
							<th class="py-3 px-4 text-left">Quantity</th>
							<th class="py-3 px-4 text-left">Acquired</th>
							<th class="py-3 px-4 text-left">Paid</th>
							<th class="py-3 px-4 text-left">Actions</th>
						</tr>
					</thead>
					<tbody class="divide-y divide-gray-200">
			`)
			if err != nil {
				return err
			}

			// Loop through each ammo record
			for i, ammo := range data.Ammo {
				ammoID := strconv.FormatUint(uint64(ammo.ID), 10)
				acquiredDate := formatDate(ammo.Acquired)
				paidAmount := formatPrice(ammo.Paid)
				
				// Alternate row background for better readability
				bgClass := ""
				if i%2 == 0 {
					bgClass = "bg-gray-50"
				}

				_, err = io.WriteString(w, `
						<tr class="`+bgClass+` hover:bg-gray-100">
							<td class="py-3 px-4">
								<a href="/owner/munitions/`+ammoID+`" class="text-gunmetal-800 hover:text-gunmetal-600 font-medium hover:underline">`+ammo.Name+`</a>
							</td>
							<td class="py-3 px-4">
								`+ammo.Brand.Name+` `+ammo.Caliber.Caliber+`
							</td>
							<td class="py-3 px-4">
								`+strconv.Itoa(ammo.Count)+` rounds
							</td>
							<td class="py-3 px-4">
								`+acquiredDate+`
							</td>
							<td class="py-3 px-4">
								`+paidAmount+`
							</td>
							<td class="py-3 px-4">
								<div class="flex space-x-3">
									<a href="/owner/munitions/`+ammoID+`" class="text-gunmetal-600 hover:text-gunmetal-800" title="View Details">
										<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
										</svg>
									</a>
									<a href="/owner/munitions/`+ammoID+`/edit" class="text-blue-600 hover:text-blue-800" title="Edit">
										<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
										</svg>
									</a>
									<form action="/owner/munitions/`+ammoID+`/delete" method="POST" class="inline" onsubmit="return confirm('Are you sure you want to delete this ammunition?');">
										<input type="hidden" name="csrf_token" value="`+data.Auth.CSRFToken+`">
										<button type="submit" class="text-red-600 hover:text-red-800" title="Delete">
											<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
											</svg>
										</button>
									</form>
								</div>
							</td>
						</tr>
				`)
				if err != nil {
					return err
				}
			}

			_, err = io.WriteString(w, `
					</tbody>
				</table>
			</div>
			`)
			if err != nil {
				return err
			}
		}

		_, err = io.WriteString(w, `
		</div>
		`)
		if err != nil {
			return err
		}

		return nil
	}))
} 